!function(){"use strict";angular.module("app",["ui.router","app.organization"])}(),function(){"use strict";angular.module("app.organization",["app.utils","app.repository"])}(),function(){"use strict";angular.module("app.repository",["app.utils","chart.js"])}(),function(){"use strict";angular.module("app.utils",[])}(),function(){"use strict";function a(a){a.go("organization")}a.$inject=["$state"],angular.module("app").run(a)}(),function(){"use strict";function a(a,b){function c(){a.getBySlug("mundipagg").then(d).catch(f)}function d(b){h.organization=b,a.getRepos("mundipagg").then(e).catch(f)}function e(a){h.repositories=a}function f(a){console.error(a),alert("Um erro inesperado aconteceu !")}function g(a){b.go("repository",{name:a})}var h=this;h.organization={},h.repositories=[],h.goToDetails=g,c()}a.$inject=["Organization","$state"],angular.module("app.organization").controller("OrganizationController",a)}(),function(){"use strict";function a(a,b){a.state("organization",{url:"/",templateUrl:"/apps/organization/organization.html",controller:"OrganizationController as vm"}),b.otherwise("")}a.$inject=["$stateProvider","$urlRouterProvider"],angular.module("app.organization").config(a)}(),function(){"use strict";function a(a,b,c){function d(d){var e=a.defer();return b.get(c.getApiUrl("/orgs/"+d)).then(function(a){e.resolve(a.data)}).catch(e.reject),e.promise}function e(d){var e=a.defer();return b.get(c.getApiUrl("/orgs/"+d+"/repos")).then(function(a){e.resolve(a.data)}).catch(e.reject),e.promise}return{getBySlug:d,getRepos:e}}a.$inject=["$q","$http","Remote"],angular.module("app.organization").factory("Organization",a)}(),function(){"use strict";function a(a,b){function c(){a.getByFullName("mundipagg/"+i).then(d).catch(g),a.getContributors("mundipagg/"+i).then(e).catch(g),a.getCommits("mundipagg/"+i).then(f).catch(g)}function d(a){h.repository=a}function e(a){h.contributors=a}function f(a){var b=a.reverse(),c=[],d=[],e=1;angular.forEach(b,function(a,b){var f=moment(a.commit.author.date).format("MMM/YYYY");c.length>0?c[c.length-1]==f?(e+=1,d[d.length-1]=e):(e=1,d.push(e),c.push(f)):(c.push(f),d.push(e))}),h.commits.labels=c,h.commits.datas=[d]}function g(a){console.error(a),alert("Um erro inesperado aconteceu !")}var h=this,i=b.name;h.repository={},h.contributors=[],h.commits={labels:[],datas:[],series:[]},c()}a.$inject=["Repository","$stateParams"],angular.module("app.repository").controller("RepositoryController",a)}(),function(){"use strict";function a(a,b){a.state("repository",{url:"repository/:name",templateUrl:"/apps/repository/repository.html",controller:"RepositoryController as vm"})}a.$inject=["$stateProvider","$urlRouterProvider"],angular.module("app.repository").config(a)}(),function(){"use strict";function a(a,b,c){function d(d){var e=a.defer();return b.get(c.getApiUrl("/repos/"+d)).then(function(a){e.resolve(a.data)}).catch(e.reject),e.promise}function e(d){var e=a.defer();return b.get(c.getApiUrl("/repos/"+d+"/contributors")).then(function(a){e.resolve(a.data)}).catch(e.reject),e.promise}function f(d){var e=a.defer();return b.get(c.getApiUrl("/repos/"+d+"/commits")).then(function(a){e.resolve(a.data)}).catch(e.reject),e.promise}return{getByFullName:d,getContributors:e,getCommits:f}}a.$inject=["$q","$http","Remote"],angular.module("app.repository").factory("Repository",a)}(),function(){"use strict";function a(){function a(a){return b+a}var b="https://api.github.com";return{getApiUrl:a}}angular.module("app.utils").factory("Remote",a)}();